# version: '3.8'

services:
  django_gunicorn:
    container_name: django_gunicorn
    build: .
    expose:
      - "8000"
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    networks:
      - app_network

  daphne:
    container_name: django_daphne
    build: .
    entrypoint: /app/entrypoint.sh
    command: daphne -b 0.0.0.0 -p 8001 myproject.asgi:application # Daphne 설정
    expose:
      - "8001"
    ports:
      - "8001:8001"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    networks:
      - app_network

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      #      - ./resources/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
      - media_volume:/app/media
    #      - /resources/cert/localhost.pem:/etc/nginx/ssl/localhost.pem
    #      - /resources/cert/localhost-key.pem:/etc/nginx/ssl/localhost-key.pem
    networks:
      - app_network

  mysql:
    image: mysql:8.0
    container_name: main-project-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3333:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network

  redis:
    image: redis:7.0
    container_name: main-project-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6377:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  static_volume:
  media_volume:
