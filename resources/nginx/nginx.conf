upstream django_gunicorn {
    server localhost:8000;  # Gunicorn 서비스 이름
}

upstream daphne {
    server localhost:8001;  # Daphne 서비스
}


server {
    listen 80;
    server_name resdineconsulting.com;

    location / {
        return 301 http://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;

    ssl_certificate /etc/letsencrypt/live/resdineconsulting.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/resdineconsulting.com/privkey.pem;

    server_name resdineconsulting.com;  # 도메인이나 IP 주소를 입력

    # 정적 파일 처리
    location /static/ {
        alias /app/static/;  # Django 앱 내부의 정적 파일 경로
    }

    location /media/ {
        alias /app/media/;  # Django 앱 내부의 미디어 파일 경로
    }


    # WebSocket 요청을 Daphne로 라우팅
    location /ws/ {
        proxy_pass http://daphne;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 나머지 모든 요청을 Gunicorn으로 전달
    location / {
        proxy_pass http://django_gunicorn;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}