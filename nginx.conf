# 악성 IP 차단 설정
geo $bad_guys {
    default 0;
    66.240.205.34 1;    # Shodan 스캐너
    185.247.137.44 1;   # InternetMeasurement 스캔
    175.149.193.224 1;  # Mozi 봇넷
    80.82.77.202 1;     # SSL/TLS 프로빙
    109.205.183.151 1;  # 악성 스캐너
    59.127.188.139 1;   # 악성 봇
    45.83.64.195 1;     # 악성 요청
}

# 악성 User-Agent 차단 설정
map $http_user_agent $bad_agent {
    default 0;
    "~*InternetMeasurement" 1;
    "~*Mozi(?!lla)" 1;
    "~*malware-hunter" 1;
    "~*shodan" 1;
    "~*censys" 1;
    "~*LG-L160L" 1;
}

upstream vita_gunicorn {
    server vita_gunicorn:8000;
}

upstream daphne {
    server unix:/app/daphne_socket/daphne.sock;
}

server {
    listen 80;
    server_name api.vita.diannn.xyz;

    # 악성 요청 차단
    if ($bad_guys) {
        return 403;
    }
    
    if ($bad_agent) {
        return 403;
    }

    # 민감한 파일 접근 차단
    location ~ /\.(env|git|ssh|aws|docker|vscode|config) {
        deny all;
        return 403;
    }

    # PHP 파일 접근 차단
    location ~ \.php$ {
        deny all;
        return 403;
    }

    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name api.vita.diannn.xyz;

    ssl_certificate /etc/letsencrypt/live/api.vita.diannn.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.vita.diannn.xyz/privkey.pem;

    # 악성 요청 차단
    if ($bad_guys) {
        return 403;
    }
    
    if ($bad_agent) {
        return 403;
    }

    # 비정상적인 요청 패턴 차단
    if ($request_method !~ ^(GET|POST|HEAD|OPTIONS)$) {
        return 444;
    }

    # 민감한 파일 접근 차단
    location ~ /\.(env|git|ssh|aws|docker|vscode|config) {
        deny all;
        return 403;
    }

    # PHP 파일 접근 차단
    location ~ \.php$ {
        deny all;
        return 403;
    }

    location /static/ {
        alias /app/static/;
    }

    location /media/ {
        alias /app/media/;
    }

    location /ws/ {
        proxy_pass http://daphne;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header Origin $http_origin;
        proxy_buffering off;
    }

    location / {
        proxy_pass http://vita_gunicorn;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}


# # 로컬 테스트용
# upstream gunicorn {
#     server gunicorn:8000;
# }

# upstream daphne {
#     server unix:/app/daphne_socket/daphne.sock;
# }

# server {
#     listen 80;
#     server_name localhost 127.0.0.1;

#     # 민감한 파일 접근 차단
#     location ~ /\.(env|git|ssh|aws|docker|vscode|config) {
#         deny all;
#         return 403;
#     }

#     location /static/ {
#         alias /app/static/;
#     }

#     location /media/ {
#         alias /app/media/;
#     }

#     location /ws/ {
#         proxy_pass http://daphne;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_read_timeout 300s;
#         proxy_connect_timeout 75s;
#         proxy_send_timeout 300s;
#         proxy_set_header X-Forwarded-Host $server_name;
#         proxy_buffering off;
#     }

#     location / {
#         proxy_pass http://gunicorn;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }
